generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatusEnum {
  ordering
  preparing
  ready
  finished
  refused
}

enum CategoriesEnum {
  side
  drink
  dessert
  combo
}

model product {
  id             String           @id @default(uuid())
  name           String           @unique @db.VarChar(50)
  description    String           @db.VarChar(100)
  price          Int              @db.Integer()
  cover_image    String           @db.VarChar(300)
  category       CategoriesEnum   @default(side)
  product_orders product_orders[]
  combo          Boolean          @default(false)
}

model orders {
  id                String           @id @default(uuid())
  status            OrderStatusEnum  @default(ordering)
  products_id       String[]
  product_orders    product_orders[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt
  client            String?          @default("Nome n√£o informado") @db.VarChar(120)
  reason_of_refusal String?          @db.VarChar(140)
  code              Int              @default(autoincrement()) @db.Integer()
}

model product_orders {
  id          String                @id @default(uuid())
  order_id    String
  order       orders                @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product_id  String
  product     product               @relation(fields: [product_id], references: [id], onDelete: Restrict)
  quantity    Int                   @db.Integer()
  comment     String?               @db.VarChar(200)
  additionals additional_on_order[]
}

model additional {
  id             String                @id @default(uuid())
  name           String                @unique @db.VarChar(50)
  description    String                @db.VarChar(50)
  price          Int                   @db.Integer()
  cover_image    String                @db.VarChar(300)
  product_orders additional_on_order[]
}

model additional_on_order {
  product_order    product_orders @relation(fields: [product_order_id], references: [id], onDelete: Cascade)
  product_order_id String
  additional       additional     @relation(fields: [additional_id], references: [id], onDelete: Restrict)
  additional_id    String

  @@id([product_order_id, additional_id])
}
